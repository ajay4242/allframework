===============================================================================================
                            1 set-up
---------------------------------------------------------------------------------------------- Installing & Setting up the Symfony Framework

        1 - Technical Requirements
        2 - Creating Symfony Applications
        3 - Setting up an Existing Symfony Project
        4 - Running Symfony Applications
        5 - Installing Packages
             Symfony Packs
        6 - Checking Security Vulnerabilities
        7 - Symfony LTS Versions
        7 - The Symfony Demo application
        8 - Start Coding!
        9 - Learn More
===============================================================================================
                                       
-----------------------------------------------------------------------------------------------
                                 1  Technical Requirements
---------------------------------------------------------------------------------------------
     install php , composer, 
     install symfony-cli
             wget https://get.symfony.com/cli/installer -O - | bash
             symfony check:requir
=============================================================================================
-----------------------------------------------------------------------------------------------
                                  2 - Creating Symfony Applications
----------------------------------------------------------------------------------------------           symfony new my_project_name --full
          composer create-project symfony/website-skeleton my_project_name
          
          symfony new my_project_name
          composer create-project symfony/skeleton my_project_name

# The project’s cache and logs directory (by default, <project>/var/cache/ and <project>/var/log/) must be writable by the web server. If you have any issue, read how to set up permissions for Symfony applications.
#The var/log/ directory must exist and must be writable by both your web server user and the terminal user;
#The var/cache/ directory must be writable by the terminal user (the user running cache:warmup or cache:clear commands);
#The var/cache/ directory must be writable by the web server user if you use a filesystem-based cache
===============================================================================================
-----------------------------------------------------------------------------------------------
3 - Setting up an Existing Symfony Project
-----------------------------------------------------------------------------------------------
 cd projects/
 git clone ...
 cd my-project/
 composer install
 ============================================================================================
-----------------------------------------------------------------------------------------------        4 - Running Symfony Applications
-----------------------------------------------------------------------------------------------
 cd my-project/
 symfony server:start
  symfony open:local  # to browse url
   symfony server:start -d  # to start server in back ground
   symfony server:log       # to see server log files
   symfony server:ca:install   # to Enabling TLS
============================================================================================  
-----------------------------------------------------------------------------------------------
 5 - Installing Packages
-----------------------------------------------------------------------------------------------
cd my-project/
 composer require logger
  Symfony Pack
==============================================================================================
-----------------------------------------------------------------------------------------------
 6 - Checking Security Vulnerabilities
-----------------------------------------------------------------------------------------------
 symfony check:security
-----------------------------------------------------------------------------------------------
 7 - Symfony LTS Versions
-----------------------------------------------------------------------------------------------
 symfony new my_project_name --version=lts
  symfony new my_project_name --version=next
   symfony new my_project_name --version=4.4
   composer create-project symfony/website-skeleton:"^4.4" my_project_name
==============================================================================================
-----------------------------------------------------------------------------------------------                          8 - The Symfony Demo application
-----------------------------------------------------------------------------------------------
   symfony new my_project_name --demo
   ======================================================================================
-----------------------------------------------------------------------------------------------
  8 - Start Coding!
-----------------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------------
  9 - Learn More
-----------------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------------
===============================================================================================
                             Symfony and HTTP Fundamentals
-----------------------------------------------------------------------------------------------
 Requests and Responses in HTTP
            Step 1: The Client Sends a Request
                GET / HTTP/1.1
                Host: xkcd.com
                Accept: text/html
                User-Agent: Mozilla/5.0 (Macintosh)
            Step 2: The Server Returns a Response
                 HTTP/1.1 200 OK
                 Date: Sat, 02 Apr 2011 21:05:05 GMT
                 Server: lighttpd/1.4.19
                 Content-Type: text/html
                 
                 <html>
                     <!-- ... HTML for the xkcd comic -->
                 </html>
            Requests, Responses and Web Development
 Requests and Responses in PHP
      Request
         $uri = $_SERVER['REQUEST_URI'];
         $foo = $_GET['foo'];
         header('Content-Type: text/html');
         echo 'The URI requested is: '.$uri;
         echo 'The value of the "foo" parameter is: '.$foo;
     Responce
         HTTP/1.1 200 OK
         Date: Sat, 03 Apr 2011 02:14:33 GMT
         Server: Apache/2.2.17 (Unix)
         Content-Type: text/html
         
         The URI requested is: /testing?foo=symfony
         The value of the "foo" parameter is: symfony

 Requests and Responses in Symfony
            Symfony Request Object
                use Symfony\Component\HttpFoundation\Request;
                $request = Request::createFromGlobals();
                // the URI being requested (e.g. /about) minus any query parameters
                $request->getPathInfo();
                // retrieves $_GET and $_POST variables respectively
                $request->query->get('id');
                $request->request->get('category', 'default category');
                // retrieves $_SERVER variables
                $request->server->get('HTTP_HOST');
                // retrieves an instance of UploadedFile identified by "attachment"
                $request->files->get('attachment');
                // retrieves a $_COOKIE value
                $request->cookies->get('PHPSESSID');
                // retrieves an HTTP request header, with normalized, lowercase keys
                $request->headers->get('host');
                $request->headers->get('content-type');
                $request->getMethod();    // e.g. GET, POST, PUT, DELETE or HEAD
                $request->getLanguages(); // an array of languages the client accepts
            Symfony Response Object
                    use Symfony\Component\HttpFoundation\Response;
                    $response = new Response();
                    $response->setContent('<html><body><h1>Hello world!</h1></body></html>');
                    $response->setStatusCode(Response::HTTP_OK);
                    // sets a HTTP response header
                    $response->headers->set('Content-Type', 'text/html');
                    // prints the HTTP headers followed by the content
                    $response->send();
 The Journey from the Request to the Response
            The Front Controller
            The Symfony Application Flow
 Summary: The Request-Response Flow
  
    A client (e.g. a browser) sends an HTTP request;
    Each request executes the same, single file (called a “front controller”);
    The front controller boots Symfony and passes the request information;
    Internally, Symfony uses routes and controllers to create the Response for the page (we’ll learn about these soon!);
    Symfony turns your Response object into the text headers and content (i.e. the HTTP response), which are sent back to the client.
